@Library('POC-ML-SHARED-LIBRARIES')_

def selection
def ntbfile
def branch


pipeline {
    agent { label 'master' }
    stages {
        stage('Input') {
            steps {
               script{ 
                   def opciones = []
                   def projects = []
                   yaml = readYaml (file: 'resources/projects.yaml')
                   keys =  yaml.keySet()
                   keys.each {
                        yaml[it].each{
                            projects = projects << it
                            opciones = opciones << it.name
                        }
                   }
                   project = input(
                        message: "Seleccione el proyecto",
                        parameters: [choice(name: "Proyectos", choices: opciones, description: "Proyectos a seleccionar")]
                        
                   )
                   selection =  projects.findAll{ it.name == project  }
                   selection = selection[0]
                   
                   /**/
                   
                   
               }
            }
        }
        stage('Checkout Project') {
            steps {
                
               withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId:'github',
                  usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']
                ]){
                   //PENDIENTE USAR CREDENCIALES
                    sh "git clone ${selection.repos.ml.url.replace('https://','https://')}"
                }
                
                script{
                    
                    def branches= []
                    
                    sh "git ls-remote -h ${selection.repos.ml.url} > result.txt"
                    
                    def output=readFile('result.txt').split("\n")
                    
                    output.each {
                        branches = branches << it.substring(it.lastIndexOf("/")+1,it.length())
                    }
                    
                    branch = input(
                        message: "Seleccione Rama",
                        parameters: [choice(name: "Ramas", choices: branches, description: "Ramas a seleccionar")]
                    )
                    
                   println branch
                    
                }
                
            }
        }

        stage('Job Generation') {
            steps {
                script{
                   ntbfile = readFile("./${selection.repos.ml.name}/ntbs/POC_COMPLETO.ipynb") 
                   jobDsl targets: './resources/seed.groovy',
                       additionalParameters: [ntbfile: "${ntbfile}", branch: "${branch}"]
                }
                
            }
        }
        
    }
    
    post {
        always {
          deleteDir()
        }
    }
}
